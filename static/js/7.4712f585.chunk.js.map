{"version":3,"file":"static/js/7.4712f585.chunk.js","mappings":"qRAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAoB,mCAAG,6FAC5BC,EAD4B,UACnBF,EADmB,sCACmBD,GADnB,SAGXI,EAAAA,EAAAA,IAAUD,GAHC,cAG5BE,EAH4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,qDAOpBC,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BN,EAD0B,UACjBF,EADiB,gCACeD,EADf,kBAC4BS,GAD5B,SAGTL,EAAAA,EAAAA,IAAUD,GAHD,cAG1BE,EAH0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BR,EAD0B,UACjBF,EADiB,iBACAU,EADA,oBACcX,GADd,SAGTI,EAAAA,EAAAA,IAAUD,GAHD,cAG1BE,EAH0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBM,EAAe,mCAAG,WAAMD,GAAN,gFACvBR,EADuB,UACdF,EADc,iBACGU,EADH,4BACyBX,GADzB,SAGNI,EAAAA,EAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,yBAItBA,EAASC,KAAKO,MAJQ,2CAAH,qD,oFCmB5B,UAvCA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMV,EAAQS,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAcjB,OALAC,EAAAA,EAAAA,YAAU,WACM,KAAVd,GAA0B,OAAVA,IACpBD,EAAAA,EAAAA,IAAmBC,GAAOe,KAAKR,EAChC,GAAE,CAACP,KAGF,iCACE,kBAAMgB,SAdW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAA0B,KAAVV,EAAe,CAAEA,MAAOmB,EAAKE,SAASrB,MAAMsB,OAAU,CAAC,GACvEH,EAAKI,OACN,EASG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDlB,EAAOoB,OAAS,IACf,wBACGpB,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAM1B,IAAM4B,MAAO,CAAEC,KAAMnB,GAAnD,SACGgB,EAAMI,SAFFJ,EAAM1B,GADA,QAW1B,C","sources":["Services/api.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '95f52d61b01969a69153f9d8a2d4bb9b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTreadingsMovies = async () => {\n  const url = `${BASE_URL}trending/movie/day?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nconst api = {\n  fetchTreadingsMovies,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { fetchMoviesByQuery } from 'Services/api';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams(query !== '' ? { query: form.elements.query.value } : {});\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    fetchMoviesByQuery(query).then(setMovies);\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","fetchTreadingsMovies","url","axios","response","data","results","fetchMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","then","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","length","map","movie","to","state","from","title"],"sourceRoot":""}