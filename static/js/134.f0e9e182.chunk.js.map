{"version":3,"file":"static/js/134.f0e9e182.chunk.js","mappings":"+SAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAoB,mCAAG,6FAC5BC,EAD4B,qCACQH,GADR,SAGXC,EAAAA,EAAAA,IAAUE,GAHC,cAG5BC,EAH4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,qDAOpBC,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BL,EAD0B,+BACIH,EADJ,kBACiBQ,GADjB,SAGTP,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BP,EAD0B,gBACXO,EADW,oBACGV,GADH,SAGTC,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBM,EAAe,mCAAG,WAAMD,GAAN,gFACvBP,EADuB,gBACRO,EADQ,4BACcV,GADd,SAGNC,EAAAA,EAAAA,IAAUE,GAHJ,cAGvBC,EAHuB,yBAItBA,EAASC,KAAKO,MAJQ,2CAAH,sDAOfC,EAAkB,mCAAG,WAAMH,GAAN,gFAC1BP,EAD0B,gBACXO,EADW,4BACWV,GADX,SAGTC,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qD,sFCY/B,UAvCe,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAcjB,OALAC,EAAAA,EAAAA,YAAU,WACM,KAAVf,GAA0B,OAAVA,IACpBD,EAAAA,EAAAA,IAAmBC,GAAOgB,KAAKR,EAChC,GAAE,CAACR,KAGF,iCACE,kBAAMiB,SAdW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAA0B,KAAVX,EAAe,CAAEA,MAAOoB,EAAKE,SAAStB,MAAMuB,OAAU,CAAC,GACvEH,EAAKI,OACN,EASG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDlB,EAAOoB,OAAS,IACf,wBACGpB,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAM3B,IAAM6B,MAAO,CAAEC,KAAMnB,GAAnD,SACGgB,EAAMI,SAFFJ,EAAM3B,GADA,QAW1B,C","sources":["Services/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '95f52d61b01969a69153f9d8a2d4bb9b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingsMovies = async () => {\n  const url = `trending/movie/day?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const url = `search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const url = `movie/${id}?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const url = `movie/${id}/credits?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const url = `movie/${id}/reviews?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { fetchMoviesByQuery } from 'Services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams(query !== '' ? { query: form.elements.query.value } : {});\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    fetchMoviesByQuery(query).then(setMovies);\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","axios","fetchTrendingsMovies","url","response","data","results","fetchMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","then","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","length","map","movie","to","state","from","title"],"sourceRoot":""}