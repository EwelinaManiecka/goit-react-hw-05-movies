{"version":3,"file":"static/js/186.c25f7d09.chunk.js","mappings":"+SAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAoB,mCAAG,6FAC5BC,EAD4B,qCACQH,GADR,SAGXC,EAAAA,EAAAA,IAAUE,GAHC,cAG5BC,EAH4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,qDAOpBC,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BL,EAD0B,+BACIH,EADJ,kBACiBQ,GADjB,SAGTP,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BP,EAD0B,gBACXO,EADW,oBACGV,GADH,SAGTC,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBM,EAAe,mCAAG,WAAMD,GAAN,gFACvBP,EADuB,gBACRO,EADQ,4BACcV,GADd,SAGNC,EAAAA,EAAAA,IAAUE,GAHJ,cAGvBC,EAHuB,yBAItBA,EAASC,KAAKO,MAJQ,2CAAH,sDAOfC,EAAkB,mCAAG,WAAMH,GAAN,gFAC1BP,EAD0B,gBACXO,EADW,4BACWV,GADX,SAGTC,EAAAA,EAAAA,IAAUE,GAHD,cAG1BC,EAH0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,qD,8ECC/B,UA9BgB,WACd,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAmBI,GAASG,KAAKJ,EAClC,GAAE,CAACC,IAECF,EAIL,OACE,yBACGA,EAAaM,OAAS,GACrB,wBACGN,EAAaO,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOb,GADM,MAQ1B,4CAIP,C","sources":["Services/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '95f52d61b01969a69153f9d8a2d4bb9b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingsMovies = async () => {\n  const url = `trending/movie/day?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const url = `search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const url = `movie/${id}?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const url = `movie/${id}/credits?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const url = `movie/${id}/reviews?api_key=${KEY}`;\n\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'Services/api';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        \"We don't have any reviews for this movie\"\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","axios","fetchTrendingsMovies","url","response","data","results","fetchMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","then","length","map","review","author","content"],"sourceRoot":""}